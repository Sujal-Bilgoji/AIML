# -*- coding: utf-8 -*-
"""AIML 5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Y-ilXtdPZwn_o9zoUQ_vUnKnmTNDDjhd
"""

import numpy as np
import pandas as pd

data=pd.read_csv('/content/Labsheet 5 Sales.csv')

x=data['GrLivArea']
y=data['SalePrice']

x=(x-x.mean()) / x.std()
x=np.c_[np.ones(x.shape[0]), x]

alpha=0.01
iteration=2000
m=y.size
np.random.speed(123)
theta=np.random.rand(2)

def gradient_descent(x,y,theta,iteration,alpha):
  past_cost=[]
  past_theta=[theta]
  for i in range(iteration):
    prediction=np.dot(x, theta)
    error=prediction - y
    cost=1/2*m * np.dot(error.T, error)
    past_cost.append(cost)
    theta=theta-(1/m)*alpha*(x.T.dot(error))
    past_theta.append(theta)
  return past_theta, past_cost

  past_theta, past_cost=gradient_descent(x,y,theta,iteration,alpha)
  theta=past_theta[-1]

  print("Gradient Descent: {:2f},{:2f}".format(theta[0],theta[1]))

plt.title('Cost function ]')
plt.xlabel('no.of iteration')
plt.ylabel('Cost')
plt.plot(past_cost)
plt.show()

